Items in {} are allowed to be anything, everything else should be as written

1. Create a new file in the processing_steps folder, named {something} (preferably related to your processing step).
    a. In the file, create a class as such
        class {ClassName}(ProcessingStep):
            """
            {Write a description of your class and what it does here, making sure to note any
             parameters that the object needs to be initialized with, and what inputs/outputs
             the step needs/gives on each run through the pipeline}
            """
            def __init__(self, {add any initialized parameters as arguments}):
                {save any parameters that you added as self.{variable_name} object attributes}

            def process(self, context: dict) -> dict:
                {put your code here, using/modifying the context information}
                return context

2. Make sure to add these lines to the __init__.py file:
    a. At the beginning (with the other imports):
        from .{name of your file} import {name of your class}
    b. Add this item to the __all__ list:
        '{Your Class Name (the same as after the import statement)'

3. Then, over in main.py you can just use your class as {Your Class Name}({any __init__ arguments needed)
    and add it to the pipeline list that is in the main function.